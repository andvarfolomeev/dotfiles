export EDITOR="nvim --cmd 'let g:flatten_wait=1'"
export ZSH="$HOME/.oh-my-zsh"
# {{{ paths
path=('/opt/homebrew/bin' $path)
path=('/Users/andvarfolomeev/.local/bin' $path)
path=('/opt/homebrew/opt/gnu-sed/libexec/gnubin' $path)
path=('/Users/andvarfolomeev/.local/share/solana/install/active_release/bin' $path)
path=('/opt/homebrew/opt/jpeg/bin' $path)
path=('/opt/homebrew/opt/jpeg/lib/pkgconfig' $path)
path=('~/.local/share/nvim/mason/bin' $path)
path=('~/.bun/bin' $path)
# }}}
# {{{ C++ flags
export LDFLAGS="-L/opt/homebrew/opt/jpeg/lib"
export CPPFLAGS="-I/opt/homebrew/opt/jpeg/include"
# }}}
# {{{ oh-my-zsh
ZSH_THEME="candy"
plugins=(
    eza
    brew
    chezmoi
    fzf
    ssh

    gh
    git
    gitignore

    docker
    docker-compose
    kubectl

    # asdf
    nvm

    npm
)

zstyle ':omz:plugins:eza' 'icons' yes
# }}}
# {{{ aliases
alias lg="lazygit";
alias ld="lazydocker";

alias g="git";
alias ga="git add";
alias glg="git log --graph";
alias gds="git diff --staged";
alias glo="git log --pretty=format:'%C(Yellow)%h  %C(reset)%ad (%C(Green)%cr%C(reset))%x09 %C(Cyan)%an: %C(reset)%s'";

alias n="nvim";
alias m="nvim -u ~/.config/nvim/minimal.lua"
# }}}
# {{{ asdf
# . "$HOME/.asdf/asdf.sh"
# fpath=(${ASDF_DIR}/completions $fpath)
# autoload -Uz compinit && compinit
# }}}
# {{{ nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
# }}}
# {{{ pnpm
export PNPM_HOME="/Users/andvarfolomeev/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# }}}
# {{{ ngrok
if command -v ngrok &>/dev/null; then
  eval "$(ngrok completion)"
fi
# }}}
# {{{ fzf
source <(fzf --zsh)
export DISABLE_FZF_AUTO_COMPLETION="false"
export DISABLE_FZF_KEY_BINDINGS="false"
export FZF_DEFAULT_OPTS='
  --color=bg:#151515,bg+:#202020,hl:#d0d0d0,hl+:#f0f0f0
  --color=fg:#d0d0d0,fg+:#e0e0e0,info:#505050,prompt:#e0e0e0,pointer:#f0f0f0
  --color=marker:#f0f0f0,spinner:#f0f0f0,header:#a0a0a0
'
export FZF_ALT_C_OPTS="
  --walker dir,follow,hidden
  --walker-skip .git,node_modules,target,.asdf,Library
  --preview 'bat --style=numbers --color=always --line-range :500 {}'"
# }}}
# {{{ stop docker containers
dstop() {
  docker stop $(docker ps -q)
}
# }}}
# {{{ conda
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
# }}}
# {{{ Envs
export $(grep -v '^#' ~/.env | xargs)
# }}}
# {{{ go
export GOPATH=$HOME/go
path=('/usr/local/go/bin' $path)
path=('/Users/andvarfolomeev/go/bin' $path)
# }}}
# {{{ kitty
[ "$TERM" = "xterm-kitty" ] && alias ssh="kitty +kitten ssh"
# }}}
export PATH
source $ZSH/oh-my-zsh.sh

# bun completions
[ -s "/Users/andvarfolomeev/.bun/_bun" ] && source "/Users/andvarfolomeev/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
